- name: Key Exchange - Obtain SSO token with using username/password credentials
  ovirt_auth:
    url: "{{ auth.manager }}"
    username: "{{ auth.username }}"
    password: "{{ auth.password }}"
    insecure: "{{ run_insecure }}"
  run_once: yes
  delegate_to: localhost

- name: Key Exchange - Wait for VM Up
  wait_for:
    timeout: 45
  delegate_to: localhost

- name: Key Exchange - Fact the network info of the vm
  ovirt_vm_info:
    auth: "{{ ovirt_auth }}"
    pattern: name="{{ inventory_hostname }}"


# - name: Key Exchange - Store the dhcp ip to a fact
#   set_fact: ip_dhcp="{{ fact_lease.stdout }}"

# - name: Key Exchange - Check if host is not already in the known_hosts file
#   lineinfile:
#     path: /root/.ssh/known_hosts
#     state: absent
#     regexp: '^{{ item }}'
#   delegate_to: localhost
#   with_items:
#     - "{{ inventory_hostname }}"
#   tags:
#     - erase_ssh_key

# - name: Key Exchange - Check the connection
#   wait_for_connection:
#     connect_timeout: 30
#     sleep: 5
#     delay: 5
#     timeout: 300

# - name: Key Exchange - Copy the ssh key to the remote host
#   authorized_key:
#     user: root
#     key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
#     state: present
#   tags:
#     - deploy_ssh_key
#   delegate_to: "{{ ip_dhcp }}"
